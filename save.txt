while(s.find("//", pos + 1) != std::string::npos)
            {
                pos = s.find("//", pos + 1);

                if(pos != std::string::npos)
                {
                    // Make sure it's not in a string or char
                    std::string before = s.substr(0, pos);
                    if(countChars(before, "\"") % 2 == 0 && countChars(before, "'") % 2 == 0)
                    {
                        inComment = true;
                        std::stringstream sub;
                        sub << "$" << graphics::COLORSET_COMMENT_START;
                        commentStart = pos;
                        singleline = true;
                        s.insert(pos, sub.str());
                        pos += 2;
                    }
                }

                ++pos;
            }

            pos = -1;
            while(s.find("/*", pos + 1) != std::string::npos)
            {

                pos = s.find("/*", pos + 1);
                std::cout << "commentstart: " << commentStart << ". " << (!inComment && pos > commentStart ? "yes" : "no") << " at " << pos << std::endl;

                if((inComment && !singleline) || pos < commentStart)
                {
                    // Make sure it's not in a string or char
                    std::string before = s.substr(0, pos);
                    if(countChars(before, "\"") % 2 == 0 && countChars(before, "'") % 2 == 0)
                    {
                        inComment = multiline = true;
                        std::stringstream sub;
                        sub << "$" << graphics::COLORSET_COMMENT_START;
                        s.insert(pos, sub.str());
                        ++pos;
                    }

                    // Find next close
                    int cPos = s.find("*/", pos + 1);

                    if(cPos != std::string::npos)
                    {
                        inComment = multiline = false;
                        std::stringstream sub;
                        sub << "$" << graphics::COLORSET_COMMENT_END;
                        s.insert(cPos + 2, sub.str());
                        ++pos;
                    }
                }

                ++pos;
            }
